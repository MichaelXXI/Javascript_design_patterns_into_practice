const { reverseOriginal, reverseForB, reverseForA } = require('./index');
let stringToReverse = "123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789"
let stringReversed = "987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321987654321"

test('Reverse function exists', () => {
  expect(reverseForA).toBeDefined();
  expect(reverseForB).toBeDefined();
  expect(reverseOriginal).toBeDefined();
});

test('Reverse reverses a string 1', () => {
  expect(reverseOriginal(stringToReverse)).toEqual(stringReversed);
});

test('Reverse reverses a string 2', () => {
  expect(reverseForA(stringToReverse)).toEqual(stringReversed);
});

test('Reverse reverses a string 3', () => {
  expect(reverseForB(stringToReverse)).toEqual(stringReversed);
});

test('Reverse reverses a string', () => {
  expect(reverseOriginal('  abcd')).toEqual('dcba  ');
  expect(reverseForA('  abcd')).toEqual('dcba  ');
  expect(reverseForB('  abcd')).toEqual('dcba  ');
});
